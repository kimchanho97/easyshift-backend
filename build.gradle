plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "me.champeau.jmh" version "0.7.1"
}

jmh {
    fork = 1
    iterations = 10
    warmupIterations = 3
}

group = 'com.burntoburn'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // 마이크로미터 프로메테우스 구현체
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // JMH
    implementation 'org.openjdk.jmh:jmh-core:1.35'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.35'
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'io.jsonwebtoken:jjwt:0.12.6'
    // DB Driver
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Test
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
}

test {
    // testRuntimeClasspath에서 byte-buddy-agent JAR 파일을 찾아 -javaagent 옵션으로 추가
    doFirst {
        def agentFile = configurations.testRuntimeClasspath.find { it.name.startsWith("byte-buddy-agent") }
        if (agentFile) {
            jvmArgs += "-javaagent:${agentFile.absolutePath}"
            println "Added javaagent: ${agentFile.absolutePath}"
        } else {
            println "Byte Buddy Agent not found in testRuntimeClasspath."
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs += '-Xshare:off'
}
